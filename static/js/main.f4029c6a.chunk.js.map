{"version":3,"sources":["logo.svg","components/Search.js","components/SearchPark.js","images/npslogo.jpg","components/ParkCards.js","components/Webcam.js","App.js","reportWebVitals.js","index.js"],"names":["filter","createFilterOptions","Search","React","value","setValue","toggleOpen","name","year","setDialogValue","className","Autocomplete","onChange","event","newValue","setTimeout","inputValue","filterOptions","options","params","filtered","push","id","activities","getOptionLabel","option","selectOnFocus","clearOnBlur","handleHomeEndKeys","renderOption","props","sx","width","freeSolo","renderInput","TextField","label","act_id","SearchPark","parks","ParkCards","parkCode","full_name","parkURL","activity","states","useState","setParks","getPark","a","fetch","res","status","window","location","reload","json","jsonResponse","data","console","log","useEffect","Card","maxWidth","CardMedia","component","height","src","logo","alt","CardContent","Typography","gutterBottom","variant","color","CardActions","Button","size","target","href","Webcam","image","setImage","getImage","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mKAAe,I,+DCYTA,EAASC,cAEA,SAASC,IACtB,MAA0BC,WAAe,MAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA2BF,YAAe,GAA1C,mBAAaG,GAAb,WAWA,EAAsCH,WAAe,CACnDI,KAAM,GACNC,KAAM,KAFR,mBAAoBC,GAApB,WAeA,OACE,cAAC,WAAD,UACI,qBAAKC,UAAU,SAAf,SACF,cAACC,EAAA,EAAD,CACEP,MAAOA,EACPQ,SAAU,SAACC,EAAOC,GACQ,kBAAbA,EAETC,YAAW,WACTT,GAAW,GACXG,EAAe,CACbF,KAAMO,EACNN,KAAM,QAGDM,GAAYA,EAASE,YAC9BV,GAAW,GACXG,EAAe,CACbF,KAAMO,EAASE,WACfR,KAAM,MAGRH,EAASS,IAGbG,cAAe,SAACC,EAASC,GACvB,IAAMC,EAAWpB,EAAOkB,EAASC,GASjC,MAP0B,KAAtBA,EAAOH,YACTI,EAASC,KAAK,CACZL,WAAYG,EAAOH,WACnBT,KAAK,2BAIFa,GAETE,GAAG,wBACHJ,QAASK,EACTC,eAAgB,SAACC,GAEf,MAAsB,kBAAXA,EACFA,EAELA,EAAOT,WACFS,EAAOT,WAETS,EAAOlB,MAEhBmB,eAAa,EACbC,aAAW,EACXC,mBAAiB,EACjBC,aAAc,SAACC,EAAOL,GAAR,OAAmB,8CAAQK,GAAR,aAAgBL,EAAOlB,SACxDwB,GAAI,CAAEC,MAAO,KACbC,UAAQ,EACRC,YAAa,SAACf,GAAD,OAAY,cAACgB,EAAA,EAAD,2BAAehB,GAAf,IAAuBiB,MAAM,4BAS9D,IAAMb,EAAa,CACf,CACIc,OAAQ,uCACR9B,KAAM,oBAER,CACE8B,OAAQ,uCACR9B,KAAM,aAER,CACE8B,OAAQ,uCACR9B,KAAM,gBAER,CACE8B,OAAQ,uCACR9B,KAAM,UAER,CACE8B,OAAQ,uCACR9B,KAAM,WAER,CACE8B,OAAQ,uCACR9B,KAAM,WAER,CACE8B,OAAQ,uCACR9B,KAAM,gBAER,CACE8B,OAAQ,uCACR9B,KAAM,UAER,CACE8B,OAAQ,uCACR9B,KAAM,YAER,CACE8B,OAAQ,uCACR9B,KAAM,mBAER,CACE8B,OAAQ,uCACR9B,KAAM,gBAER,CACE8B,OAAQ,uCACR9B,KAAM,WAER,CACE8B,OAAQ,uCACR9B,KAAM,UAER,CACE8B,OAAQ,uCACR9B,KAAM,QAER,CACE8B,OAAQ,uCACR9B,KAAM,WAER,CACE8B,OAAQ,uCACR9B,KAAM,gBAER,CACE8B,OAAQ,uCACR9B,KAAM,YAER,CACE8B,OAAQ,uCACR9B,KAAM,UAER,CACE8B,OAAQ,uCACR9B,KAAM,kBAER,CACE8B,OAAQ,uCACR9B,KAAM,yBAER,CACE8B,OAAQ,uCACR9B,KAAM,eAER,CACE8B,OAAQ,uCACR9B,KAAM,yBAER,CACE8B,OAAQ,uCACR9B,KAAM,kBAER,CACE8B,OAAQ,uCACR9B,KAAM,mBAER,CACE8B,OAAQ,uCACR9B,KAAM,YAER,CACE8B,OAAQ,uCACR9B,KAAM,aAER,CACE8B,OAAQ,uCACR9B,KAAM,cAER,CACE8B,OAAQ,uCACR9B,KAAM,gBAER,CACE8B,OAAQ,uCACR9B,KAAM,YAER,CACE8B,OAAQ,uCACR9B,KAAM,UAER,CACE8B,OAAQ,uCACR9B,KAAM,cAER,CACE8B,OAAQ,uCACR9B,KAAM,aAER,CACE8B,OAAQ,uCACR9B,KAAM,gBAER,CACE8B,OAAQ,uCACR9B,KAAM,eAER,CACE8B,OAAQ,uCACR9B,KAAM,WAER,CACE8B,OAAQ,uCACR9B,KAAM,YAER,CACE8B,OAAQ,uCACR9B,KAAM,eAER,CACE8B,OAAQ,uCACR9B,KAAM,UAER,CACE8B,OAAQ,uCACR9B,KAAM,gBAER,CACE8B,OAAQ,uCACR9B,KAAM,sBCpQRP,G,MAASC,eAEA,SAASqC,IACtB,MAA0BnC,WAAe,MAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA2BF,YAAe,GAA1C,mBAAaG,GAAb,WAWA,EAAsCH,WAAe,CACnDI,KAAM,GACNC,KAAM,KAFR,mBAAoBC,GAApB,WAeA,OACE,cAAC,WAAD,UACI,qBAAKC,UAAU,cAAf,SACF,cAACC,EAAA,EAAD,CACEP,MAAOA,EACPQ,SAAU,SAACC,EAAOC,GACQ,kBAAbA,EAETC,YAAW,WACTT,GAAW,GACXG,EAAe,CACbF,KAAMO,EACNN,KAAM,QAGDM,GAAYA,EAASE,YAC9BV,GAAW,GACXG,EAAe,CACbF,KAAMO,EAASE,WACfR,KAAM,MAGRH,EAASS,IAGbG,cAAe,SAACC,EAASC,GACvB,IAAMC,EAAWpB,EAAOkB,EAASC,GASjC,MAP0B,KAAtBA,EAAOH,YACTI,EAASC,KAAK,CACZL,WAAYG,EAAOH,WACnBT,KAAK,wBAIFa,GAETE,GAAG,wBACHJ,QAASqB,EACTf,eAAgB,SAACC,GAEf,MAAsB,kBAAXA,EACFA,EAELA,EAAOT,WACFS,EAAOT,WAETS,EAAOlB,MAEhBmB,eAAa,EACbC,aAAW,EACXC,mBAAiB,EACjBC,aAAc,SAACC,EAAOL,GAAR,OAAmB,8CAAQK,GAAR,aAAgBL,EAAOlB,SACxDwB,GAAI,CAAEC,MAAO,KACbC,UAAQ,EACRC,YAAa,SAACf,GAAD,OAAY,cAACgB,EAAA,EAAD,2BAAehB,GAAf,IAAuBiB,MAAM,yBAY9D,IAAMG,EAAQ,G,+ECtGC,MAA0B,oCC0D1BC,EA/CG,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,SAAUC,EAAyC,EAAzCA,UAAWC,EAA8B,EAA9BA,QAASC,EAAqB,EAArBA,SAC9C,GADmE,EAAXC,OAC7BC,mBAAS,KAApC,mBAAeC,GAAf,WAGMC,EAAO,uCAAG,8BAAAC,EAAA,sEACMC,MAAM,uDAAD,OAAwDN,EAAxD,oBAHX,6CAEA,UAEO,OADbO,EADM,QAEJC,OAFI,gBAGRC,OAAOC,SAASC,SAHR,uCAKmBJ,EAAIK,OALvB,OAKFC,EALE,OAMRV,EAASU,EAAaC,MACtBC,QAAQC,IAAIH,EAAaC,MAPjB,4CAAH,qDAiBb,OANAG,qBAAU,WACNb,MACD,IAKC,eAACc,EAAA,EAAD,CAAM/B,GAAI,CAAEgC,SAAU,KAAtB,UACF,cAACC,EAAA,EAAD,CACEC,UAAU,MACVC,OAAO,MACPC,IAAKC,EACLC,IAAI,iBAEN,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKR,UAAU,MAAhD,yBACevB,KAEf,eAAC6B,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,iBAAlC,wBACajC,QAGf,cAACkC,EAAA,EAAD,UACA,cAACC,EAAA,EAAD,CAAQC,KAAK,QAAQC,OAAO,SAASC,KAAI,UAAKpC,GAA9C,8BCUSqC,EAhDA,SAAC,GAA0B,IAAzBvC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,UACvB,EAA0BI,mBAAS,IAAnC,mBAAOmC,EAAP,KAAcC,EAAd,KAGMC,EAAQ,uCAAG,8BAAAlC,EAAA,sEACKC,MAAM,gEAAD,OAAiET,EAAjE,oBAHX,6CAEC,UAEM,OADbU,EADO,QAELC,OAFK,gBAGTC,OAAOC,SAASC,SAHP,uCAKkBJ,EAAIK,OALtB,OAKHC,EALG,OAMTyB,EAASzB,EAAaC,MACtBC,QAAQC,IAAIH,EAAaC,MAPhB,4CAAH,qDAgBd,OALAG,qBAAU,WACNsB,MACD,IAIC,qBAAKzE,UAAU,MAAf,SACA,eAACoD,EAAA,EAAD,CAAM/B,GAAI,CAAEgC,SAAU,KAAtB,UACF,cAACC,EAAA,EAAD,CACEC,UAAU,MACVC,OAAO,MAEPC,IAAG,UAAKc,GACRZ,IAAI,QAEN,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,KAAKR,UAAU,MAAhD,yBACevB,KAEf,eAAC6B,EAAA,EAAD,CAAYE,QAAQ,QAAQC,MAAM,iBAAlC,wBACajC,QAGf,cAACkC,EAAA,EAAD,UC3BSS,MAff,WACE,OACE,gCACE,oBAAI1E,UAAU,SAAd,uBACF,cAAC,EAAD,CAAQY,GAAK,WAEb,cAAC,EAAD,IAEA,cAAC,EAAD,IACA,cAAC,EAAD,QCJW+D,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.f4029c6a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Dialog from '@mui/material/Dialog';\r\nimport DialogTitle from '@mui/material/DialogTitle';\r\nimport DialogContent from '@mui/material/DialogContent';\r\nimport DialogContentText from '@mui/material/DialogContentText';\r\nimport DialogActions from '@mui/material/DialogActions';\r\nimport Button from '@mui/material/Button';\r\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport './Search.css'\r\n\r\n\r\nconst filter = createFilterOptions();\r\n\r\nexport default function Search() {\r\n  const [value, setValue] = React.useState(null);\r\n  const [open, toggleOpen] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setDialogValue({\r\n      name: '',\r\n      year: '',\r\n    });\r\n\r\n    toggleOpen(false);\r\n  };\r\n\r\n  const [dialogValue, setDialogValue] = React.useState({\r\n    name: '',\r\n    year: '',\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValue({\r\n      name: dialogValue.name,\r\n      year: parseInt(dialogValue.year, 10),\r\n    });\r\n\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <div className=\"search\">\r\n      <Autocomplete \r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          if (typeof newValue === 'string') {\r\n            // timeout to avoact_id instant valact_idation of the dialog's form.\r\n            setTimeout(() => {\r\n              toggleOpen(true);\r\n              setDialogValue({\r\n                name: newValue,\r\n                year: '',\r\n              });\r\n            });\r\n          } else if (newValue && newValue.inputValue) {\r\n            toggleOpen(true);\r\n            setDialogValue({\r\n              name: newValue.inputValue,\r\n              year: '',\r\n            });\r\n          } else {\r\n            setValue(newValue);\r\n          }\r\n        }}\r\n        filterOptions={(options, params) => {\r\n          const filtered = filter(options, params);\r\n\r\n          if (params.inputValue !== '') {\r\n            filtered.push({\r\n              inputValue: params.inputValue,\r\n              name: `Activity not available`,\r\n            });\r\n          }\r\n\r\n          return filtered;\r\n        }}\r\n        id=\"free-solo-dialog-demo\"\r\n        options={activities}\r\n        getOptionLabel={(option) => {\r\n          // e.g value selected with enter, right from the input\r\n          if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.name;\r\n        }}\r\n        selectOnFocus\r\n        clearOnBlur\r\n        handleHomeEndKeys\r\n        renderOption={(props, option) => <li {...props}>{option.name}</li>}\r\n        sx={{ width: 300 }}\r\n        freeSolo\r\n        renderInput={(params) => <TextField {...params} label=\"Search Activity\" />}\r\n      />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\n\r\n// list of activities from the GET API call of NPS \r\nconst activities = [\r\n    {\r\n        act_id: \"09DF0950-D319-4557-A57E-04CD2F63FF42\",\r\n        name: \"Arts and Culture\"\r\n      },\r\n      {\r\n        act_id: \"13A57703-BB1A-41A2-94B8-53B692EB7238\",\r\n        name: \"Astronomy\"\r\n      },\r\n      {\r\n        act_id: \"5F723BAD-7359-48FC-98FA-631592256E35\",\r\n        name: \"Auto and ATV\"\r\n      },\r\n      {\r\n        act_id: \"7CE6E935-F839-4FEC-A63E-052B1DEF39D2\",\r\n        name: \"Biking\"\r\n      },\r\n      {\r\n        act_id: \"071BA73C-1D3C-46D4-A53C-00D5602F7F0E\",\r\n        name: \"Boating\"\r\n      },\r\n      {\r\n        act_id: \"A59947B7-3376-49B4-AD02-C0423E08C5F7\",\r\n        name: \"Camping\"\r\n      },\r\n      {\r\n        act_id: \"07CBCA6A-46B8-413F-8B6C-ABEDEBF9853E\",\r\n        name: \"Canyoneering\"\r\n      },\r\n      {\r\n        act_id: \"BA316D0F-92AE-4E00-8C80-DBD605DC58C3\",\r\n        name: \"Caving\"\r\n      },\r\n      {\r\n        act_id: \"B12FAAB9-713F-4B38-83E4-A273F5A43C77\",\r\n        name: \"Climbing\"\r\n      },\r\n      {\r\n        act_id: \"C11D3746-5063-4BD0-B245-7178D1AD866C\",\r\n        name: \"Compass and GPS\"\r\n      },\r\n      {\r\n        act_id: \"8C495067-8E94-4D78-BBD4-3379DACF6550\",\r\n        name: \"Dog Sledding\"\r\n      },\r\n      {\r\n        act_id: \"AE42B46C-E4B7-4889-A122-08FE180371AE\",\r\n        name: \"Fishing\"\r\n      },\r\n      {\r\n        act_id: \"D72206E4-6CD1-4441-A355-F8F1827466B1\",\r\n        name: \"Flying\"\r\n      },\r\n      {\r\n        act_id: \"1DFACD97-1B9C-4F5A-80F2-05593604799E\",\r\n        name: \"Food\"\r\n      },\r\n      {\r\n        act_id: \"3F3ABD16-2C52-4EAA-A1F6-4235DE5686F0\",\r\n        name: \"Golfing\"\r\n      },\r\n      {\r\n        act_id: \"B33DC9B6-0B7D-4322-BAD7-A13A34C584A3\",\r\n        name: \"Guided Tours\"\r\n      },\r\n      {\r\n        act_id: \"42FD78B9-2B90-4AA9-BC43-F10E9FEA8B5A\",\r\n        name: \"Hands-On\"\r\n      },\r\n      {\r\n        act_id: \"BFF8C027-7C8F-480B-A5F8-CD8CE490BFBA\",\r\n        name: \"Hiking\"\r\n      },\r\n      {\r\n        act_id: \"0307955A-B65C-4CE4-A780-EB36BAAADF0B\",\r\n        name: \"Horse Trekking\"\r\n      },\r\n      {\r\n        act_id: \"8386EEAF-985F-4DE8-9037-CCF91975AC94\",\r\n        name: \"Hunting and Gathering\"\r\n      },\r\n      {\r\n        act_id: \"5FF5B286-E9C3-430E-B612-3380D8138600\",\r\n        name: \"Ice Skating\"\r\n      },\r\n      {\r\n        act_id: \"DF4A35E0-7983-4A3E-BC47-F37B872B0F25\",\r\n        name: \"Junior Ranger Program\"\r\n      },\r\n      {\r\n        act_id: \"B204DE60-5A24-43DD-8902-C81625A09A74\",\r\n        name: \"Living History\"\r\n      },\r\n      {\r\n        act_id: \"C8F98B28-3C10-41AE-AA99-092B3B398C43\",\r\n        name: \"Museum Exhibits\"\r\n      },\r\n      {\r\n        act_id: \"4D224BCA-C127-408B-AC75-A51563C42411\",\r\n        name: \"Paddling\"\r\n      },\r\n      {\r\n        act_id: \"0C0D142F-06B5-4BE1-8B44-491B90F93DEB\",\r\n        name: \"Park Film\"\r\n      },\r\n      {\r\n        act_id: \"7779241F-A70B-49BC-86F0-829AE332C708\",\r\n        name: \"Playground\"\r\n      },\r\n      {\r\n        act_id: \"42CF4021-8524-428E-866A-D33097A4A764\",\r\n        name: \"SCUBA Diving\"\r\n      },\r\n      {\r\n        act_id: \"24380E3F-AD9D-4E38-BF13-C8EEB21893E7\",\r\n        name: \"Shopping\"\r\n      },\r\n      {\r\n        act_id: \"F9B1D433-6B86-4804-AED7-B50A519A3B7C\",\r\n        name: \"Skiing\"\r\n      },\r\n      {\r\n        act_id: \"3EBF7EAC-68FC-4754-B6A4-0C38A1583D45\",\r\n        name: \"Snorkeling\"\r\n      },\r\n      {\r\n        act_id: \"C38B3C62-1BBF-4EA1-A1A2-35DE21B74C17\",\r\n        name: \"Snow Play\"\r\n      },\r\n      {\r\n        act_id: \"7C912B83-1B1B-4807-9B66-97C12211E48E\",\r\n        name: \"Snowmobiling\"\r\n      },\r\n      {\r\n        act_id: \"01D717BC-18BB-4FE4-95BA-6B13AD702038\",\r\n        name: \"Snowshoeing\"\r\n      },\r\n      {\r\n        act_id: \"AE3C95F5-E05B-4A28-81DD-1C5FD4BE88E2\",\r\n        name: \"Surfing\"\r\n      },\r\n      {\r\n        act_id: \"587BB2D3-EC35-41B2-B3F7-A39E2B088AEE\",\r\n        name: \"Swimming\"\r\n      },\r\n      {\r\n        act_id: \"94369BFD-F186-477E-8713-AE2A745154DA\",\r\n        name: \"Team Sports\"\r\n      },\r\n      {\r\n        act_id: \"4D06CEED-90C6-4B69-B264-32CC90B69BA6\",\r\n        name: \"Tubing\"\r\n      },\r\n      {\r\n        act_id: \"8A1C7B17-C2C6-4F7C-9539-EA1E19971D80\",\r\n        name: \"Water Skiing\"\r\n      },\r\n      {\r\n        act_id: \"0B685688-3405-4E2A-ABBA-E3069492EC50\",\r\n        name: \"Wildlife Watching\"\r\n      },\r\n\r\n]; ","import * as React from 'react';\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete, { createFilterOptions } from '@mui/material/Autocomplete';\r\nimport './SearchPark.css'\r\n\r\nconst filter = createFilterOptions();\r\n\r\nexport default function SearchPark() {\r\n  const [value, setValue] = React.useState(null);\r\n  const [open, toggleOpen] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setDialogValue({\r\n      name: '',\r\n      year: '',\r\n    });\r\n\r\n    toggleOpen(false);\r\n  };\r\n\r\n  const [dialogValue, setDialogValue] = React.useState({\r\n    name: '',\r\n    year: '',\r\n  });\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    setValue({\r\n      name: dialogValue.name,\r\n      year: parseInt(dialogValue.year, 10),\r\n    });\r\n\r\n    handleClose();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n        <div className=\"SearchClass\">\r\n      <Autocomplete \r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n          if (typeof newValue === 'string') {\r\n            // timeout to avoact_id instant valact_idation of the dialog's form.\r\n            setTimeout(() => {\r\n              toggleOpen(true);\r\n              setDialogValue({\r\n                name: newValue,\r\n                year: '',\r\n              });\r\n            });\r\n          } else if (newValue && newValue.inputValue) {\r\n            toggleOpen(true);\r\n            setDialogValue({\r\n              name: newValue.inputValue,\r\n              year: '',\r\n            });\r\n          } else {\r\n            setValue(newValue);\r\n          }\r\n        }}\r\n        filterOptions={(options, params) => {\r\n          const filtered = filter(options, params);\r\n\r\n          if (params.inputValue !== '') {\r\n            filtered.push({\r\n              inputValue: params.inputValue,\r\n              name: `Park does not exist`,\r\n            });\r\n          }\r\n\r\n          return filtered;\r\n        }}\r\n        id=\"free-solo-dialog-demo\"\r\n        options={parks}\r\n        getOptionLabel={(option) => {\r\n          // e.g value selected with enter, right from the input\r\n          if (typeof option === 'string') {\r\n            return option;\r\n          }\r\n          if (option.inputValue) {\r\n            return option.inputValue;\r\n          }\r\n          return option.name;\r\n        }}\r\n        selectOnFocus\r\n        clearOnBlur\r\n        handleHomeEndKeys\r\n        renderOption={(props, option) => <li {...props}>{option.name}</li>}\r\n        sx={{ width: 300 }}\r\n        freeSolo\r\n        renderInput={(params) => <TextField {...params} label=\"Search Parks\" />}\r\n      />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n//parks\r\n\r\n// list of parks \r\n// get the list of parks using the API \r\n// the user will select the park and the webcams API will return the non-streaming image of the \r\n// the selected park \r\nconst parks = [\r\n    \r\n    \r\n    \r\n  \r\n\r\n]; ","export default __webpack_public_path__ + \"static/media/npslogo.454c82d0.jpg\";","import React, {useEffect, useState} from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from   '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport logo from '../images/npslogo.jpg'\r\n\r\n\r\nconst ParkCards = ({parkCode, full_name, parkURL, activity, states}) =>{\r\n    const [parkIn, setParks] = useState([]); \r\n    const API_KEY = 'QAjuTVVeaLghWPLMIAYk6cibYmCUywJPBDPZtUda';\r\n    \r\n    const getPark = async () => {\r\n        const res = await fetch(`https://developer.nps.gov/api/v1/activities/parks?q=${activity}&api_key=${API_KEY}`); \r\n        if (res.status === 429){\r\n            window.location.reload();\r\n        } else {\r\n            const jsonResponse = await res.json(); \r\n            setParks(jsonResponse.data)\r\n            console.log(jsonResponse.data)\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        getPark(); \r\n    }, [])\r\n\r\n   \r\n\r\n    return (\r\n        <Card sx={{ maxWidth: 345 }}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"140\"\r\n        src={logo}\r\n        alt=\"green iguana\"\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n          Park Name : {full_name}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n         Park Code: {parkCode}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n      <Button size=\"small\" target=\"_blank\" href={`${parkURL}`}>Learn More</Button>\r\n      </CardActions>\r\n    </Card>\r\n    );\r\n            \r\n\r\n}\r\n\r\n\r\nexport default ParkCards","import React, {useEffect, useState} from 'react'\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport CardMedia from   '@mui/material/CardMedia';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport logo from '../images/npslogo.jpg'\r\n\r\n\r\nconst Webcam = ({parkCode, full_name}) =>{\r\n    const [image, setImage] = useState([]); \r\n    const API_KEY = 'QAjuTVVeaLghWPLMIAYk6cibYmCUywJPBDPZtUda';\r\n    \r\n    const getImage = async () => {\r\n        const res = await fetch(`https://developer.nps.gov/api/v1/activities/webcams?parkCode=${parkCode}&api_key=${API_KEY}`); \r\n        if (res.status === 429){\r\n            window.location.reload();\r\n        } else {\r\n            const jsonResponse = await res.json(); \r\n            setImage(jsonResponse.data)\r\n            console.log(jsonResponse.data)\r\n        }\r\n\r\n    }\r\n    useEffect(() => {\r\n        getImage(); \r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className=\"web\">\r\n        <Card sx={{ maxWidth: 345 }}>\r\n      <CardMedia\r\n        component=\"img\"\r\n        height=\"140\"\r\n        // src={`${image.data.images.url}`}\r\n        src={`${image}`}\r\n        alt=\"NPS\"\r\n      />\r\n      <CardContent>\r\n        <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n          Park Name : {full_name}\r\n        </Typography>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n         Park Code: {parkCode}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions>\r\n      </CardActions>\r\n    </Card> \r\n    </div>\r\n    );\r\n           \r\n\r\n}\r\n\r\n\r\nexport default Webcam","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Search from './components/Search'\nimport SearchPark from './components/SearchPark'\nimport ParkCards from './components/ParkCards';\nimport Webcam from './components/Webcam';\nfunction App() {\n  return (\n    <div>\n      <h4 className=\"header\"> NPS App </h4>\n    <Search id = \"Search\">\n    </Search>\n    <SearchPark></SearchPark>\n    \n    <ParkCards></ParkCards>\n    <Webcam></Webcam>\n    </div>\n \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}